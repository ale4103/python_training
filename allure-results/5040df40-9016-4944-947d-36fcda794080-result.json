{"name": "test_add_group[None:name&OB'lw:headerYEG,:footer6iiC]", "status": "failed", "statusDetails": {"message": "AssertionError: assert [4:fsdfdsf:ds...q:qwerty, ...] == [4:fsdfdsf:dsf...q:qwerty, ...]\n  Left contains more items, first extra item: None:name&OB'lw:headerYEG,:footer6iiC\n  Use -v to get the full diff", "trace": "app = <fixture.application.Application object at 0x03C4BF50>\ndb = <fixture.db.DbFixture object at 0x03C26FD0>\njson_groups = None:name&OB'lw:headerYEG,:footer6iiC, check_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group = json_groups\n        with allure.step('Given a group list'):\n            old_groups = db.get_group_list()\n        with allure.step(\"When I add a group %s to the list\" % group):\n            app.group.create(group)\n        with allure.step('Then the new group list is equal to the old list with the added group'):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           AssertionError: assert [4:fsdfdsf:ds...q:qwerty, ...] == [4:fsdfdsf:dsf...q:qwerty, ...]\nE             Left contains more items, first extra item: None:name&OB'lw:headerYEG,:footer6iiC\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:15: AssertionError"}, "steps": [{"name": "Given a group list", "status": "passed", "start": 1558104576830, "stop": 1558104576834}, {"name": "When I add a group None:name&OB'lw:headerYEG,:footer6iiC to the list", "status": "passed", "start": 1558104576834, "stop": 1558104578691}, {"name": "Then the new group list is equal to the old list with the added group", "status": "failed", "statusDetails": {"message": "AssertionError: assert [4:fsdfdsf:ds...q:qwerty, ...] == [4:fsdfdsf:dsf...q:qwerty, ...]\n  Left contains more items, first extra item: None:name&OB'lw:headerYEG,:footer6iiC\n  Use -v to get the full diff\n", "trace": "  File \"C:\\WORK5\\python_training\\test\\test_add_group.py\", line 15, in test_add_group\n    assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\n"}, "start": 1558104578691, "stop": 1558104578698}], "parameters": [{"name": "json_groups", "value": "None:name&OB'lw:headerYEG,:footer6iiC"}], "start": 1558104576830, "stop": 1558104578699, "uuid": "6196d95b-1625-4a72-8a88-49fb13877319", "historyId": "b362a53b23c0cee6e7e0f3321ce92122", "fullName": "test.test_add_group#test_add_group[None:name&OB'lw:headerYEG,:footer6iiC]", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_add_group"}, {"name": "host", "value": "WS-A_IVANOV"}, {"name": "thread", "value": "11920-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_add_group"}]}